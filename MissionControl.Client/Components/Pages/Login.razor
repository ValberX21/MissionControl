@page "/"
@using MissionControl.Shared.Models

@inject HttpClient Http
@inject NavigationManager Navigation
@inject MissionControl.Services.LoginState LoginState
@inject Blazored.LocalStorage.ILocalStorageService LocalStorage

<style>
    .background {
        background-image: url('/Image/background.png');
        background-size: cover;
        background-position: center;
        height: 100vh;
        width: 100vw;
        display: flex;
        align-items: center;
        justify-content: flex-start;
        padding-left: 5%;
    }

    .login-card {
        background-color: rgba(255, 255, 255, 0.95);
        padding: 30px;
        border-radius: 10px;
        width: 300px;
        box-shadow: 0 0 10px rgba(0,0,0,0.3);
    }
</style>

<div class="d-flex justify-content-center align-items-center min-vh-100">
    <div class="d-flex gap-5">
        <div class="card p-4" style="width: 300px;">
            <h3>Welcome Jedi</h3>

            <EditForm Model="@loginData" OnValidSubmit="LoginJedi">
                <DataAnnotationsValidator />
                <ValidationSummary />

                <div>
                    <label>Knight Name</label>
                    <InputText @bind-Value="loginData.JediName" class="form-control" />

                    <label class="mt-2">Password:</label>
                    <InputText @bind-Value="loginData.Password" class="form-control" type="password" />

                    <button type="submit" class="btn btn-primary mt-3">Login</button>

                    @if (!string.IsNullOrEmpty(Message))
                    {
                        <p class="text-danger mt-2">@Message</p>
                    }
                </div>
            </EditForm>
        </div>
    </div>
</div>

@code {
    private LoginModel loginData = new();
 
    private string Message = "";
    private string CreateMessage = "";

    private async Task LoginJedi()
    {
        try
        {
            var response = await Http.PostAsJsonAsync("https://localhost:44343/api/JediKnight/loginJediKnight", new
            {
                JediName = loginData.JediName,
                Password = loginData.Password
            });

            if (response.IsSuccessStatusCode)
            {
                var result = await response.Content.ReadFromJsonAsync<ApiResponse<JediKnightModel>>();

                if (result?.Data != null)
                {
                    var dtKnight = result.Data;

                    await LocalStorage.SetItemAsync("jediId", dtKnight.Id);
                    await LocalStorage.SetItemAsync("jediName", dtKnight.JediName);
                    await LocalStorage.SetItemAsync("accessLevel", dtKnight.AccessLevel);

                    LoginState.Login();
                    Navigation.NavigateTo("/home", replace: true);
                }
                else
                {
                    Message = "Error to load data";
                }
            }
            else
            {
                Message = "Some input is wrong";
            }
        }
        catch (Exception ex)
        {
            Message = $"Some erro in login: {ex.Message}";
        }
    }
}
